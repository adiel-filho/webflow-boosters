(()=>{class t{constructor(t,e){this.el=t,this.items=Array.from(e),this.balance=t.hasAttribute("sd-balance");const e=window.getComputedStyle(t);this.cols=parseInt(e.columnCount,10)||1,this.gap=parseFloat(e.columnGap)||0,this.generate()}generate(){this.el.querySelectorAll(".col").forEach(t=>t.remove()),this.el.style.cssText=`display:flex;flex-wrap:wrap;justify-content:flex-start;gap:${this.gap}px`;const t=Array.from({length:this.cols},()=>{const t=document.createElement("div");return t.className="col",t.style.cssText="flex:1;min-width:0",this.el.appendChild(t),t});this.balance?(e=>{const t=new Array(this.cols).fill(0);this.items.forEach(e=>{const r=t.indexOf(Math.min(...t)),n=e[r];n.appendChild(e),e.className="item",this.gap&&(e.style.marginBottom=this.gap+"px"),t[r]+=e.offsetHeight+this.gap})})(t):this.items.forEach((t,e)=>{e[e%this.cols].appendChild(t),t.className="item",this.gap&&(t.style.marginBottom=this.gap+"px")})}}const e=()=>{document.querySelectorAll("[sd-masonry]").forEach(t=>{const e=window.getComputedStyle(t);"none"!==e.columnCount&&new t(t,t.children)})};"loading"===document.readyState?document.addEventListener("DOMContentLoaded",e):e()})();
